// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Suggests potential corrections to transcribed text.
 *
 * - suggestCorrections - A function that handles the suggestion of corrections to the transcribed text.
 * - SuggestCorrectionsInput - The input type for the suggestCorrections function.
 * - SuggestCorrectionsOutput - The return type for the suggestCorrections function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestCorrectionsInputSchema = z.object({
  transcribedText: z
    .string()
    .describe('The transcribed text to suggest corrections for.'),
});
export type SuggestCorrectionsInput = z.infer<typeof SuggestCorrectionsInputSchema>;

const SuggestCorrectionsOutputSchema = z.object({
  correctedTextSuggestions: z
    .array(z.string())
    .describe('An array of suggested corrections for the transcribed text.'),
});
export type SuggestCorrectionsOutput = z.infer<typeof SuggestCorrectionsOutputSchema>;

export async function suggestCorrections(input: SuggestCorrectionsInput): Promise<SuggestCorrectionsOutput> {
  return suggestCorrectionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestCorrectionsPrompt',
  input: {schema: SuggestCorrectionsInputSchema},
  output: {schema: SuggestCorrectionsOutputSchema},
  prompt: `You are an AI assistant that suggests corrections for transcribed text.

  Given the following transcribed text, please provide an array of up to 5 alternative corrections or improvements.

  Transcribed Text: {{{transcribedText}}}

  Corrected Text Suggestions:`,
});

const suggestCorrectionsFlow = ai.defineFlow(
  {
    name: 'suggestCorrectionsFlow',
    inputSchema: SuggestCorrectionsInputSchema,
    outputSchema: SuggestCorrectionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
